#!/bin/bash

# Check all needed files exist

[ ! -f input/CONFIG ] && echo "CONFIG file not found in ./input/ directory" && exit
[ ! -f input/INCAR ] && echo "INCAR file not found in ./input/ directory" && exit
[ ! -f input/POTCAR ] && echo "POTCAR file not found in ./input/ directory" && exit
[ ! -f input/KPOINTS ] && echo "KPOINTS file not found in ./input/ directory" && exit
[ ! -f input/POSCAR ] && echo "POSCAR file not found in ./input/ directory" && exit
[ ! -f input/job ] && echo "job file not found in ./input/ directory\njob submission will not work" && exit

# Read CONFIG file to get parameters
source input/CONFIG

# Converge ENCUT
if [ "$conv_encut" -eq "1" ]; then
  mkdir cutoff_converge
  cd cutoff_converge
  for i in $(eval echo "{$encut_start..$encut_end..$encut_step}"); do
    mkdir "e_$i"
    cd "e_$i"
    cp ../../input/KPOINTS .
    cp ../../input/INCAR .
    cp ../../input/POTCAR .
    cp ../../input/POSCAR .
    sed -i "s/ENMAX .*$/ENMAX  = $i eV/g" INCAR
    sed -i "s/ENCUT .*$/ENCUT  = $i eV/g" INCAR
    [ -f ../../input/job ] && cp ../../input/job .

    [ "$run_vasp" -eq "1" ] && qsub -N e${i}${name} job
    cd ..
  done
  cd ..
fi

# Converge k-points
if [ "$conv_kpoint" -eq "1" ]; then
  mkdir "kpoint_converge"
  cd "kpoint_converge"
  n=1;

  IFS=',' read -ra ADDR <<< "$kpoints" # Split the kpoints by comma
  for i in "${ADDR[@]}"; do
    sub=${i//[ ]/}
    mkdir "k_$sub"
    cd "k_$sub"
    cp ../../input/KPOINTS .
    cp ../../input/INCAR .
    cp ../../input/POTCAR .
    cp ../../input/POSCAR .
    [ -f ../../input/job ] && cp ../../input/job .

    sed -i "4s/.*/${i}/" KPOINTS; then
    
    [ "$run_vasp" -eq "1" ] && qsub -N k${sub}${name} job
    let n=n+1
    cd ..
  done
  cd ..
fi
